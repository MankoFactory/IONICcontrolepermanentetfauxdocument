{"version":3,"sources":["./src/app/resetpassword/resetpassword.page.html","./src/app/resetpassword/resetpassword-routing.module.ts","./src/app/resetpassword/resetpassword.module.ts","./src/app/resetpassword/resetpassword.page.scss","./src/app/resetpassword/resetpassword.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,g+BAAg+B,4CAA4C,6d;;;;;;;;;;;;;;;;;;;ACAn+B;AACc;AAEE;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAMF,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACmB;AACrB;AACmC;AACvB;AAYzD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAVnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACV,kEAAmB;YACpB,0DAAW;YACX,4FAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;ACjBpC,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;ACAb;AACW;AACpB;AACgB;AACS;AAQlE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAI5B,YAAoB,eAA+B,EACzC,OAAe,EAAS,WAAwB,EAAS,YAA0B;QADzE,oBAAe,GAAf,eAAe,CAAgB;QACzC,YAAO,GAAP,OAAO,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAH7F,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;IAEiF,CAAC;IAElG,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SAEvD,CAAC,CAAC;IACH,CAAC;IACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE1C,IAAI;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,OAAO;SACV;QAEC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;aACjD,SAAS,CACR,CAAM,GAAG,EAAC,EAAE,CAAC;YAEX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAEnB,CAAC,GACD,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACF,CAAC;CAEH;;YAlCsC,wEAAc;YAChC,sDAAM;YAAsB,0DAAW;YAAuB,oEAAY;;AALlF,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,+JAAwC;;KAEzC,CAAC;2EAKqC,wEAAc;QAChC,sDAAM,EAAsB,0DAAW,EAAuB,oEAAY;GALlF,iBAAiB,CAsC7B;AAtC6B","file":"resetpassword-resetpassword-module-es2015.js","sourcesContent":["module.exports = \"\\n\\n<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n    <ion-title> Controle permanent</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card class=\\\"welcome-card\\\">\\n        <img src=\\\"/assets/img/LOGO-VERT.png\\\" alt=\\\"\\\" />\\n        <ion-card-header>\\n          <ion-card-subtitle>Bienvenue à l'apllication controle permanent</ion-card-subtitle>\\n          <ion-card-title> Et détection de faux documents\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <p>\\n            Naviguer facilement et rapidement.          \\n          </p>\\n        </ion-card-content>\\n      </ion-card>\\n      <form [formGroup]=\\\"sendForm\\\" (ngSubmit)=\\\"Send()\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n              <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n          </div>\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-block\\\" >connexion</button>\\n      </div>\\n    \\n       \\n      </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetpasswordPage } from './resetpassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetpasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetpasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ResetpasswordPageRoutingModule } from './resetpassword-routing.module';\nimport { ResetpasswordPage } from './resetpassword.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n    ,ReactiveFormsModule ,\n    IonicModule,\n    ResetpasswordPageRoutingModule\n  ],\n  declarations: [ResetpasswordPage]\n})\nexport class ResetpasswordPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0cGFzc3dvcmQvcmVzZXRwYXNzd29yZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthentService } from '../services/authent.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from '../services/alert.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.page.html',\n  styleUrls: ['./resetpassword.page.scss'],\n})\nexport class ResetpasswordPage implements OnInit {\n  public sendForm: FormGroup;\n  submitted = false;\n  loading = false;\n  constructor(private _authenfication: AuthentService,\n    private _router :Router, public formBuilder: FormBuilder,private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.sendForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n      \n  });\n  }\n  get f() { return this.sendForm.controls; }\n  \n  Send(){\n    this.submitted = true;\n  \n    // reset alerts on submit\n    this.alertService.clear();\n    if (this.sendForm.invalid) {\n      return;\n  }\n    \n    this.loading = true;\n    this._authenfication.sendmail(this.sendForm.value)\n    .subscribe(\n      async res => {\n        \n        console.log(res)\n        \n     },\n     error => {\n      this.alertService.error(error);\n      this.loading = false;\n  });\n   }\n\n}\n"],"sourceRoot":""}